//----------------------------------------------------------------------
//   THIS IS AUTOMATICALLY GENERATED CODE
//   Generated by Mentor Graphics' Register Assistant V@PRODUCT_VERSION@
//   OVM Register Kit version @OVM_KIT_VERSION@
//----------------------------------------------------------------------
// Project         : @PROJECT_NAME@
// Unit            : @PACKAGE_NAME@
// File            : @FILE_NAME@
//----------------------------------------------------------------------
// Created by      : @USER@
// Creation Date   : @CREATION_DATE@
//----------------------------------------------------------------------
// Title           : @PROJECT_TITLE@
//
// Description     : @PROJECT_DESCRIPTION@
//
//----------------------------------------------------------------------

//----------------------------------------------------------------------
// @PACKAGE_NAME@
//----------------------------------------------------------------------
package @PACKAGE_NAME@;

  import ovm_pkg::*;
  `include "ovm_macros.svh"
  import ovm_register_pkg::*;
  `include "ovm_register_macros.svh"
@EXTRA_INCLUDES@
@IFNDEFS@  
  /* DEFINE TYPES FOR THE DATA CONTAINED IN THE REGISTERS */
  
  // Types for enums
@DEFINE_ENUMS@

  // Types for non-field registers

@DEFINE_NON_FIELD_REGISTERS@

  // Types for registers which have fields

@DEFINE_FIELD_REGISTERS@



  /* DEFINE REGISTER CLASSES */

@DEFINE_ENUM_FIELD_MACRO@

@DEFINE_REGISTER_CLASSES@

  /* REGISTER FILE */
@DEFINE_REGISTER_FILES@



  /* REGISTER MAP */
@DEFINE_REGISTER_MAP@

  //
  // Class to automatically load a register map.
  
  //----------------------------------------------------------------------
  // register_map_auto_load
  //----------------------------------------------------------------------
  class register_map_auto_load;

    // Triggers factory registration of this default
    //  sequence. Can be overriden by the user using
    //  "default_auto_register_test".
    register_sequence_all_registers
      #(ovm_register_transaction, 
        ovm_register_transaction) dummy;

    static bit loaded = build_register_map();

    static function bit build_register_map();

      @REGISTER_MAP_TYPE@ @REGISTER_MAP_NAME@;

      @REGISTER_MAP_NAME@ = new("@REGISTER_MAP_NAME@", null);

      @REGISTER_MAP_NAME@.build_maps();

      set_config_string("*", 
        "default_auto_register_test", 
        "register_sequence_all_registers#(REQ, RSP)");
      set_config_object("*", 
        "@REGISTER_MAP_NAME@", 
         @REGISTER_MAP_NAME@, 0);
      return 1;
    endfunction

  endclass
endpackage
