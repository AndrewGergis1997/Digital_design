
-- arm7tdmi.vhd
--
-- Vsystem VHDL implementation of ARM7TDMI, generated by Veneergen

-- Elements of the code in this file are
-- Copyright 1993, 1994, 1995, 1996 Advanced RISC Machines Ltd,
-- All rights reserved.

-- Core shell

library ieee;
use ieee.std_logic_1164.all;

entity ARM7TDMI_ms is
  Port( A: out std_logic_vector(31 downto 0);
        ABE: in std_logic;
        ABORT: in std_logic;
        ALE: in std_logic;
        APE: in std_logic;
        BIGEND: in std_logic;
        BL: in std_logic_vector(3 downto 0);
        BREAKPT: in std_logic;
        BUSDIS: out std_logic;
        BUSEN: in std_logic;
        COMMRX: out std_logic;
        COMMTX: out std_logic;
        CPA: in std_logic;
        CPB: in std_logic;
        D: out std_logic_vector(31 downto 0);
        DXMGXREAD: in std_logic_vector(31 downto 0);
        DBE: in std_logic;
        DBGACK: out std_logic;
        DBGEN: in std_logic;
        DBGRQ: in std_logic;
        DBGRQI: out std_logic;
        DIN: in std_logic_vector(31 downto 0);
        DOUT: out std_logic_vector(31 downto 0);
        DRIVEBS: out std_logic;
        ECLK: out std_logic;
        ECAPCLK: out std_logic;
        ECAPCLKBS: out std_logic;
        EXTERN0: in std_logic;
        EXTERN1: in std_logic;
        HIGHZ: out std_logic;
        ICAPCLKBS: out std_logic;
        IR: out std_logic_vector(3 downto 0);
        ISYNC: in std_logic;
        LOCK: out std_logic;
        MAS: out std_logic_vector(1 downto 0);
        MCLK: in std_logic;
        nCPI: out std_logic;
        nENIN: in std_logic;
        nENOUT: out std_logic;
        nENOUTI: out std_logic;
        nEXEC: out std_logic;
        nFIQ: in std_logic;
        nHIGHZ: out std_logic;
        nIRQ: in std_logic;
        nM: out std_logic_vector(4 downto 0);
        nMREQ: out std_logic;
        nOPC: out std_logic;
        nRESET: in std_logic;
        nRW: out std_logic;
        nTDOEN: out std_logic;
        nTRANS: out std_logic;
        nTRST: in std_logic;
        nWAIT: in std_logic;
        PCLKBS: out std_logic;
        RANGEOUT0: out std_logic;
        RANGEOUT1: out std_logic;
        RSTCLKBS: out std_logic;
        SCREG: out std_logic_vector(3 downto 0);
        SDINBS: out std_logic;
        SDOUTBS: in std_logic;
        SEQ: out std_logic;
        SHCLKBS: out std_logic;
        SHCLK2BS: out std_logic;
        TAPSM: out std_logic_vector(3 downto 0);
        TBE: in std_logic;
        TBIT: out std_logic;
        TCK: in std_logic;
        TCK1: out std_logic;
        TCK2: out std_logic;
        TDI: in std_logic;
        TDO: out std_logic;
        TMS: in std_logic;
        bl0: out std_logic;
        bl1: out std_logic;
        bl2: out std_logic;
        bl3: out std_logic;
        normal: out std_logic;
        mem: out std_logic;
        reads: out std_logic;
        isync1: out std_logic;
        busen1: out std_logic;
        scan: out std_logic;
        dclk: out std_logic;
        dbg: out std_logic;
        hghz: out std_logic;
        leavingscan: out std_logic;
        leavingdclk: out std_logic;
        testBus: out std_logic;
        testDBus: out std_logic;
        enterDbg: out std_logic;
        scan1Dbg: out std_logic;
        sc2updatedr: out std_logic;
        capture048: out std_logic;
        capture0148: out std_logic);
end ARM7TDMI_ms;
  
architecture CLI of ARM7TDMI_ms is
  attribute foreign : string;
  attribute foreign of CLI : architecture is
            "vsystem_ARM7TDMI_ms_elaborate $CVE_HOME/lib/arm7tdmi_qhdl.slib";
begin
end;

-- Inout shell

library ieee;
use ieee.std_logic_1164.all;

entity ARM7TDMI_inout is
  Port( A: out std_logic_vector(31 downto 0);
        ABE: in std_logic;
        ABORT: in std_logic;
        ALE: in std_logic;
        APE: in std_logic;
        BIGEND: in std_logic;
        BL: in std_logic_vector(3 downto 0);
        BREAKPT: in std_logic;
        BUSDIS: out std_logic;
        BUSEN: in std_logic;
        COMMRX: out std_logic;
        COMMTX: out std_logic;
        CPA: in std_logic;
        CPB: in std_logic;
        D: out std_logic_vector(31 downto 0);
        DXMGXREAD: in std_logic_vector(31 downto 0);
        DBE: in std_logic;
        DBGACK: out std_logic;
        DBGEN: in std_logic;
        DBGRQ: in std_logic;
        DBGRQI: out std_logic;
        DIN: in std_logic_vector(31 downto 0);
        DOUT: out std_logic_vector(31 downto 0);
        DRIVEBS: out std_logic;
        ECLK: out std_logic;
        ECAPCLK: out std_logic;
        ECAPCLKBS: out std_logic;
        EXTERN0: in std_logic;
        EXTERN1: in std_logic;
        HIGHZ: out std_logic;
        ICAPCLKBS: out std_logic;
        IR: out std_logic_vector(3 downto 0);
        ISYNC: in std_logic;
        LOCK: out std_logic;
        MAS: out std_logic_vector(1 downto 0);
        MCLK: in std_logic;
        nCPI: out std_logic;
        nENIN: in std_logic;
        nENOUT: out std_logic;
        nENOUTI: out std_logic;
        nEXEC: out std_logic;
        nFIQ: in std_logic;
        nHIGHZ: out std_logic;
        nIRQ: in std_logic;
        nM: out std_logic_vector(4 downto 0);
        nMREQ: out std_logic;
        nOPC: out std_logic;
        nRESET: in std_logic;
        nRW: out std_logic;
        nTDOEN: out std_logic;
        nTRANS: out std_logic;
        nTRST: in std_logic;
        nWAIT: in std_logic;
        PCLKBS: out std_logic;
        RANGEOUT0: out std_logic;
        RANGEOUT1: out std_logic;
        RSTCLKBS: out std_logic;
        SCREG: out std_logic_vector(3 downto 0);
        SDINBS: out std_logic;
        SDOUTBS: in std_logic;
        SEQ: out std_logic;
        SHCLKBS: out std_logic;
        SHCLK2BS: out std_logic;
        TAPSM: out std_logic_vector(3 downto 0);
        TBE: in std_logic;
        TBIT: out std_logic;
        TCK: in std_logic;
        TCK1: out std_logic;
        TCK2: out std_logic;
        TDI: in std_logic;
        TDO: out std_logic;
        TMS: in std_logic;
        bl0: out std_logic;
        bl1: out std_logic;
        bl2: out std_logic;
        bl3: out std_logic;
        normal: out std_logic;
        mem: out std_logic;
        reads: out std_logic;
        isync1: out std_logic;
        busen1: out std_logic;
        scan: out std_logic;
        dclk: out std_logic;
        dbg: out std_logic;
        hghz: out std_logic;
        leavingscan: out std_logic;
        leavingdclk: out std_logic;
        testBus: out std_logic;
        testDBus: out std_logic;
        enterDbg: out std_logic;
        scan1Dbg: out std_logic;
        sc2updatedr: out std_logic;
        capture048: out std_logic;
        capture0148: out std_logic);
end ARM7TDMI_inout;

architecture Structural of ARM7TDMI_inout is

  component ARM7TDMI_ms
    Port( A: out std_logic_vector(31 downto 0);
          ABE: in std_logic;
          ABORT: in std_logic;
          ALE: in std_logic;
          APE: in std_logic;
          BIGEND: in std_logic;
          BL: in std_logic_vector(3 downto 0);
          BREAKPT: in std_logic;
          BUSDIS: out std_logic;
          BUSEN: in std_logic;
          COMMRX: out std_logic;
          COMMTX: out std_logic;
          CPA: in std_logic;
          CPB: in std_logic;
          D: out std_logic_vector(31 downto 0);
          DXMGXREAD: in std_logic_vector(31 downto 0);
          DBE: in std_logic;
          DBGACK: out std_logic;
          DBGEN: in std_logic;
          DBGRQ: in std_logic;
          DBGRQI: out std_logic;
          DIN: in std_logic_vector(31 downto 0);
          DOUT: out std_logic_vector(31 downto 0);
          DRIVEBS: out std_logic;
          ECLK: out std_logic;
          ECAPCLK: out std_logic;
          ECAPCLKBS: out std_logic;
          EXTERN0: in std_logic;
          EXTERN1: in std_logic;
          HIGHZ: out std_logic;
          ICAPCLKBS: out std_logic;
          IR: out std_logic_vector(3 downto 0);
          ISYNC: in std_logic;
          LOCK: out std_logic;
          MAS: out std_logic_vector(1 downto 0);
          MCLK: in std_logic;
          nCPI: out std_logic;
          nENIN: in std_logic;
          nENOUT: out std_logic;
          nENOUTI: out std_logic;
          nEXEC: out std_logic;
          nFIQ: in std_logic;
          nHIGHZ: out std_logic;
          nIRQ: in std_logic;
          nM: out std_logic_vector(4 downto 0);
          nMREQ: out std_logic;
          nOPC: out std_logic;
          nRESET: in std_logic;
          nRW: out std_logic;
          nTDOEN: out std_logic;
          nTRANS: out std_logic;
          nTRST: in std_logic;
          nWAIT: in std_logic;
          PCLKBS: out std_logic;
          RANGEOUT0: out std_logic;
          RANGEOUT1: out std_logic;
          RSTCLKBS: out std_logic;
          SCREG: out std_logic_vector(3 downto 0);
          SDINBS: out std_logic;
          SDOUTBS: in std_logic;
          SEQ: out std_logic;
          SHCLKBS: out std_logic;
          SHCLK2BS: out std_logic;
          TAPSM: out std_logic_vector(3 downto 0);
          TBE: in std_logic;
          TBIT: out std_logic;
          TCK: in std_logic;
          TCK1: out std_logic;
          TCK2: out std_logic;
          TDI: in std_logic;
          TDO: out std_logic;
          TMS: in std_logic;
          bl0: out std_logic;
          bl1: out std_logic;
          bl2: out std_logic;
          bl3: out std_logic;
          normal: out std_logic;
          mem: out std_logic;
          reads: out std_logic;
          isync1: out std_logic;
          busen1: out std_logic;
          scan: out std_logic;
          dclk: out std_logic;
          dbg: out std_logic;
          hghz: out std_logic;
          leavingscan: out std_logic;
          leavingdclk: out std_logic;
          testBus: out std_logic;
          testDBus: out std_logic;
          enterDbg: out std_logic;
          scan1Dbg: out std_logic;
          sc2updatedr: out std_logic;
          capture048: out std_logic;
          capture0148: out std_logic);
  end component;

-- Map (currently) unused ports


-- Signals to link loopbacks


begin

  core : ARM7TDMI_ms
    port map(A,
    ABE,
    ABORT,
    ALE,
    APE,
    BIGEND,
    BL,
    BREAKPT,
    BUSDIS,
    BUSEN,
    COMMRX,
    COMMTX,
    CPA,
    CPB,
    D,
    DXMGXREAD,
    DBE,
    DBGACK,
    DBGEN,
    DBGRQ,
    DBGRQI,
    DIN,
    DOUT,
    DRIVEBS,
    ECLK,
    ECAPCLK,
    ECAPCLKBS,
    EXTERN0,
    EXTERN1,
    HIGHZ,
    ICAPCLKBS,
    IR,
    ISYNC,
    LOCK,
    MAS,
    MCLK,
    nCPI,
    nENIN,
    nENOUT,
    nENOUTI,
    nEXEC,
    nFIQ,
    nHIGHZ,
    nIRQ,
    nM,
    nMREQ,
    nOPC,
    nRESET,
    nRW,
    nTDOEN,
    nTRANS,
    nTRST,
    nWAIT,
    PCLKBS,
    RANGEOUT0,
    RANGEOUT1,
    RSTCLKBS,
    SCREG,
    SDINBS,
    SDOUTBS,
    SEQ,
    SHCLKBS,
    SHCLK2BS,
    TAPSM,
    TBE,
    TBIT,
    TCK,
    TCK1,
    TCK2,
    TDI,
    TDO,
    TMS,
    bl0,
    bl1,
    bl2,
    bl3,
    normal,
    mem,
    reads,
    isync1,
    busen1,
    scan,
    dclk,
    dbg,
    hghz,
    leavingscan,
    leavingdclk,
    testBus,
    testDBus,
    enterDbg,
    scan1Dbg,
    sc2updatedr,
    capture048,
    capture0148);

-- Signal assignments to propogate loopbacks up to timing shell


end Structural;

-- Timing shell

library ieee;
use ieee.std_logic_1164.all;

entity ARM7TDMI_timing is
  Port( A: out std_logic_vector(31 downto 0);
        ABE: in std_logic;
        ABORT: in std_logic;
        ALE: in std_logic;
        APE: in std_logic;
        BIGEND: in std_logic;
        BL: in std_logic_vector(3 downto 0);
        BREAKPT: in std_logic;
        BUSDIS: out std_logic;
        BUSEN: in std_logic;
        COMMRX: out std_logic;
        COMMTX: out std_logic;
        CPA: in std_logic;
        CPB: in std_logic;
        D: inout std_logic_vector(31 downto 0);
        DXMGXREAD: in std_logic_vector(31 downto 0);
        DBE: in std_logic;
        DBGACK: out std_logic;
        DBGEN: in std_logic;
        DBGRQ: in std_logic;
        DBGRQI: out std_logic;
        DIN: in std_logic_vector(31 downto 0);
        DOUT: out std_logic_vector(31 downto 0);
        DRIVEBS: out std_logic;
        ECLK: out std_logic;
        ECAPCLK: out std_logic;
        ECAPCLKBS: out std_logic;
        EXTERN0: in std_logic;
        EXTERN1: in std_logic;
        HIGHZ: out std_logic;
        ICAPCLKBS: out std_logic;
        IR: out std_logic_vector(3 downto 0);
        ISYNC: in std_logic;
        LOCK: out std_logic;
        MAS: out std_logic_vector(1 downto 0);
        MCLK: in std_logic;
        nCPI: out std_logic;
        nENIN: in std_logic;
        nENOUT: out std_logic;
        nENOUTI: out std_logic;
        nEXEC: out std_logic;
        nFIQ: in std_logic;
        nHIGHZ: out std_logic;
        nIRQ: in std_logic;
        nM: out std_logic_vector(4 downto 0);
        nMREQ: out std_logic;
        nOPC: out std_logic;
        nRESET: in std_logic;
        nRW: out std_logic;
        nTDOEN: out std_logic;
        nTRANS: out std_logic;
        nTRST: in std_logic;
        nWAIT: in std_logic;
        PCLKBS: out std_logic;
        RANGEOUT0: out std_logic;
        RANGEOUT1: out std_logic;
        RSTCLKBS: out std_logic;
        SCREG: out std_logic_vector(3 downto 0);
        SDINBS: out std_logic;
        SDOUTBS: in std_logic;
        SEQ: out std_logic;
        SHCLKBS: out std_logic;
        SHCLK2BS: out std_logic;
        TAPSM: out std_logic_vector(3 downto 0);
        TBE: in std_logic;
        TBIT: out std_logic;
        TCK: in std_logic;
        TCK1: out std_logic;
        TCK2: out std_logic;
        TDI: in std_logic;
        TDO: out std_logic;
        TMS: in std_logic);
end ARM7TDMI_timing;

architecture Structural of ARM7TDMI_timing is

  component ARM7TDMI_inout
    Port( A: out std_logic_vector(31 downto 0);
          ABE: in std_logic;
          ABORT: in std_logic;
          ALE: in std_logic;
          APE: in std_logic;
          BIGEND: in std_logic;
          BL: in std_logic_vector(3 downto 0);
          BREAKPT: in std_logic;
          BUSDIS: out std_logic;
          BUSEN: in std_logic;
          COMMRX: out std_logic;
          COMMTX: out std_logic;
          CPA: in std_logic;
          CPB: in std_logic;
          D: out std_logic_vector(31 downto 0);
          DXMGXREAD: in std_logic_vector(31 downto 0);
          DBE: in std_logic;
          DBGACK: out std_logic;
          DBGEN: in std_logic;
          DBGRQ: in std_logic;
          DBGRQI: out std_logic;
          DIN: in std_logic_vector(31 downto 0);
          DOUT: out std_logic_vector(31 downto 0);
          DRIVEBS: out std_logic;
          ECLK: out std_logic;
          ECAPCLK: out std_logic;
          ECAPCLKBS: out std_logic;
          EXTERN0: in std_logic;
          EXTERN1: in std_logic;
          HIGHZ: out std_logic;
          ICAPCLKBS: out std_logic;
          IR: out std_logic_vector(3 downto 0);
          ISYNC: in std_logic;
          LOCK: out std_logic;
          MAS: out std_logic_vector(1 downto 0);
          MCLK: in std_logic;
          nCPI: out std_logic;
          nENIN: in std_logic;
          nENOUT: out std_logic;
          nENOUTI: out std_logic;
          nEXEC: out std_logic;
          nFIQ: in std_logic;
          nHIGHZ: out std_logic;
          nIRQ: in std_logic;
          nM: out std_logic_vector(4 downto 0);
          nMREQ: out std_logic;
          nOPC: out std_logic;
          nRESET: in std_logic;
          nRW: out std_logic;
          nTDOEN: out std_logic;
          nTRANS: out std_logic;
          nTRST: in std_logic;
          nWAIT: in std_logic;
          PCLKBS: out std_logic;
          RANGEOUT0: out std_logic;
          RANGEOUT1: out std_logic;
          RSTCLKBS: out std_logic;
          SCREG: out std_logic_vector(3 downto 0);
          SDINBS: out std_logic;
          SDOUTBS: in std_logic;
          SEQ: out std_logic;
          SHCLKBS: out std_logic;
          SHCLK2BS: out std_logic;
          TAPSM: out std_logic_vector(3 downto 0);
          TBE: in std_logic;
          TBIT: out std_logic;
          TCK: in std_logic;
          TCK1: out std_logic;
          TCK2: out std_logic;
          TDI: in std_logic;
          TDO: out std_logic;
          TMS: in std_logic;
          bl0: out std_logic;
          bl1: out std_logic;
          bl2: out std_logic;
          bl3: out std_logic;
          normal: out std_logic;
          mem: out std_logic;
          reads: out std_logic;
          isync1: out std_logic;
          busen1: out std_logic;
          scan: out std_logic;
          dclk: out std_logic;
          dbg: out std_logic;
          hghz: out std_logic;
          leavingscan: out std_logic;
          leavingdclk: out std_logic;
          testBus: out std_logic;
          testDBus: out std_logic;
          enterDbg: out std_logic;
          scan1Dbg: out std_logic;
          sc2updatedr: out std_logic;
          capture048: out std_logic;
          capture0148: out std_logic);
  end component;

-- Map (currently) unused ports

signal bl0 : std_logic;
signal bl1 : std_logic;
signal bl2 : std_logic;
signal bl3 : std_logic;
signal normal : std_logic;
signal mem : std_logic;
signal reads : std_logic;
signal isync1 : std_logic;
signal busen1 : std_logic;
signal scan : std_logic;
signal dclk : std_logic;
signal dbg : std_logic;
signal hghz : std_logic;
signal leavingscan : std_logic;
signal leavingdclk : std_logic;
signal testBus : std_logic;
signal testDBus : std_logic;
signal enterDbg : std_logic;
signal scan1Dbg : std_logic;
signal sc2updatedr : std_logic;
signal capture048 : std_logic;
signal capture0148 : std_logic;

-- Signals to link INOUTS

signal DXMGXREADS : std_logic_vector(31 downto 0);

begin

  inout0 : ARM7TDMI_inout
    port map(A,
    ABE,
    ABORT,
    ALE,
    APE,
    BIGEND,
    BL,
    BREAKPT,
    BUSDIS,
    BUSEN,
    COMMRX,
    COMMTX,
    CPA,
    CPB,
    DXMGXREADS,
    DXMGXREAD,
    DBE,
    DBGACK,
    DBGEN,
    DBGRQ,
    DBGRQI,
    DIN,
    DOUT,
    DRIVEBS,
    ECLK,
    ECAPCLK,
    ECAPCLKBS,
    EXTERN0,
    EXTERN1,
    HIGHZ,
    ICAPCLKBS,
    IR,
    ISYNC,
    LOCK,
    MAS,
    MCLK,
    nCPI,
    nENIN,
    nENOUT,
    nENOUTI,
    nEXEC,
    nFIQ,
    nHIGHZ,
    nIRQ,
    nM,
    nMREQ,
    nOPC,
    nRESET,
    nRW,
    nTDOEN,
    nTRANS,
    nTRST,
    nWAIT,
    PCLKBS,
    RANGEOUT0,
    RANGEOUT1,
    RSTCLKBS,
    SCREG,
    SDINBS,
    SDOUTBS,
    SEQ,
    SHCLKBS,
    SHCLK2BS,
    TAPSM,
    TBE,
    TBIT,
    TCK,
    TCK1,
    TCK2,
    TDI,
    TDO,
    TMS,
    bl0,
    bl1,
    bl2,
    bl3,
    normal,
    mem,
    reads,
    isync1,
    busen1,
    scan,
    dclk,
    dbg,
    hghz,
    leavingscan,
    leavingdclk,
    testBus,
    testDBus,
    enterDbg,
    scan1Dbg,
    sc2updatedr,
    capture048,
    capture0148);
  D <= DXMGXREADS;

end Structural;

-- Debug shell

library ieee;
use ieee.std_logic_1164.all;

entity ARM7TDMI is
  Port( A: out std_logic_vector(31 downto 0);
        ABE: in std_logic;
        ABORT: in std_logic;
        ALE: in std_logic;
        APE: in std_logic;
        BIGEND: in std_logic;
        BL: in std_logic_vector(3 downto 0);
        BREAKPT: in std_logic;
        BUSDIS: out std_logic;
        BUSEN: in std_logic;
        COMMRX: out std_logic;
        COMMTX: out std_logic;
        CPA: in std_logic;
        CPB: in std_logic;
        D: inout std_logic_vector(31 downto 0);
        DBE: in std_logic;
        DBGACK: out std_logic;
        DBGEN: in std_logic;
        DBGRQ: in std_logic;
        DBGRQI: out std_logic;
        DIN: in std_logic_vector(31 downto 0);
        DOUT: out std_logic_vector(31 downto 0);
        DRIVEBS: out std_logic;
        ECLK: out std_logic;
        ECAPCLK: out std_logic;
        ECAPCLKBS: out std_logic;
        EXTERN0: in std_logic;
        EXTERN1: in std_logic;
        HIGHZ: out std_logic;
        ICAPCLKBS: out std_logic;
        IR: out std_logic_vector(3 downto 0);
        ISYNC: in std_logic;
        LOCK: out std_logic;
        MAS: out std_logic_vector(1 downto 0);
        MCLK: in std_logic;
        nCPI: out std_logic;
        nENIN: in std_logic;
        nENOUT: out std_logic;
        nENOUTI: out std_logic;
        nEXEC: out std_logic;
        nFIQ: in std_logic;
        nHIGHZ: out std_logic;
        nIRQ: in std_logic;
        nM: out std_logic_vector(4 downto 0);
        nMREQ: out std_logic;
        nOPC: out std_logic;
        nRESET: in std_logic;
        nRW: out std_logic;
        nTDOEN: out std_logic;
        nTRANS: out std_logic;
        nTRST: in std_logic;
        nWAIT: in std_logic;
        PCLKBS: out std_logic;
        RANGEOUT0: out std_logic;
        RANGEOUT1: out std_logic;
        RSTCLKBS: out std_logic;
        SCREG: out std_logic_vector(3 downto 0);
        SDINBS: out std_logic;
        SDOUTBS: in std_logic;
        SEQ: out std_logic;
        SHCLKBS: out std_logic;
        SHCLK2BS: out std_logic;
        TAPSM: out std_logic_vector(3 downto 0);
        TBE: in std_logic;
        TBIT: out std_logic;
        TCK: in std_logic;
        TCK1: out std_logic;
        TCK2: out std_logic;
        TDI: in std_logic;
        TDO: out std_logic;
        TMS: in std_logic);
end ARM7TDMI;

architecture Structural of ARM7TDMI is

  component ARM7TDMI_timing
    Port( A: out std_logic_vector(31 downto 0);
          ABE: in std_logic;
          ABORT: in std_logic;
          ALE: in std_logic;
          APE: in std_logic;
          BIGEND: in std_logic;
          BL: in std_logic_vector(3 downto 0);
          BREAKPT: in std_logic;
          BUSDIS: out std_logic;
          BUSEN: in std_logic;
          COMMRX: out std_logic;
          COMMTX: out std_logic;
          CPA: in std_logic;
          CPB: in std_logic;
          D: inout std_logic_vector(31 downto 0);
          DXMGXREAD: in std_logic_vector(31 downto 0);
          DBE: in std_logic;
          DBGACK: out std_logic;
          DBGEN: in std_logic;
          DBGRQ: in std_logic;
          DBGRQI: out std_logic;
          DIN: in std_logic_vector(31 downto 0);
          DOUT: out std_logic_vector(31 downto 0);
          DRIVEBS: out std_logic;
          ECLK: out std_logic;
          ECAPCLK: out std_logic;
          ECAPCLKBS: out std_logic;
          EXTERN0: in std_logic;
          EXTERN1: in std_logic;
          HIGHZ: out std_logic;
          ICAPCLKBS: out std_logic;
          IR: out std_logic_vector(3 downto 0);
          ISYNC: in std_logic;
          LOCK: out std_logic;
          MAS: out std_logic_vector(1 downto 0);
          MCLK: in std_logic;
          nCPI: out std_logic;
          nENIN: in std_logic;
          nENOUT: out std_logic;
          nENOUTI: out std_logic;
          nEXEC: out std_logic;
          nFIQ: in std_logic;
          nHIGHZ: out std_logic;
          nIRQ: in std_logic;
          nM: out std_logic_vector(4 downto 0);
          nMREQ: out std_logic;
          nOPC: out std_logic;
          nRESET: in std_logic;
          nRW: out std_logic;
          nTDOEN: out std_logic;
          nTRANS: out std_logic;
          nTRST: in std_logic;
          nWAIT: in std_logic;
          PCLKBS: out std_logic;
          RANGEOUT0: out std_logic;
          RANGEOUT1: out std_logic;
          RSTCLKBS: out std_logic;
          SCREG: out std_logic_vector(3 downto 0);
          SDINBS: out std_logic;
          SDOUTBS: in std_logic;
          SEQ: out std_logic;
          SHCLKBS: out std_logic;
          SHCLK2BS: out std_logic;
          TAPSM: out std_logic_vector(3 downto 0);
          TBE: in std_logic;
          TBIT: out std_logic;
          TCK: in std_logic;
          TCK1: out std_logic;
          TCK2: out std_logic;
          TDI: in std_logic;
          TDO: out std_logic;
          TMS: in std_logic);
  end component;

-- Map (currently) unused ports


-- Signals to link INOUTS

signal DXMGXREADS : std_logic_vector(31 downto 0);

begin

  times : ARM7TDMI_timing
    port map(A,
    ABE,
    ABORT,
    ALE,
    APE,
    BIGEND,
    BL,
    BREAKPT,
    BUSDIS,
    BUSEN,
    COMMRX,
    COMMTX,
    CPA,
    CPB,
    D,
    DXMGXREADS,
    DBE,
    DBGACK,
    DBGEN,
    DBGRQ,
    DBGRQI,
    DIN,
    DOUT,
    DRIVEBS,
    ECLK,
    ECAPCLK,
    ECAPCLKBS,
    EXTERN0,
    EXTERN1,
    HIGHZ,
    ICAPCLKBS,
    IR,
    ISYNC,
    LOCK,
    MAS,
    MCLK,
    nCPI,
    nENIN,
    nENOUT,
    nENOUTI,
    nEXEC,
    nFIQ,
    nHIGHZ,
    nIRQ,
    nM,
    nMREQ,
    nOPC,
    nRESET,
    nRW,
    nTDOEN,
    nTRANS,
    nTRST,
    nWAIT,
    PCLKBS,
    RANGEOUT0,
    RANGEOUT1,
    RSTCLKBS,
    SCREG,
    SDINBS,
    SDOUTBS,
    SEQ,
    SHCLKBS,
    SHCLK2BS,
    TAPSM,
    TBE,
    TBIT,
    TCK,
    TCK1,
    TCK2,
    TDI,
    TDO,
    TMS);
  DXMGXREADS <= D;

end Structural;

--  Top level configuration

configuration conf_ARM7TDMI of ARM7TDMI is
  for Structural
  end for ;
end conf_ARM7TDMI ;

-- Top level component declaration

library ieee;
use ieee.std_logic_1164.all;

package ARM7TDMI_lib is
component ARM7TDMI
    Port( A: out std_logic_vector(31 downto 0);
          ABE: in std_logic;
          ABORT: in std_logic;
          ALE: in std_logic;
          APE: in std_logic;
          BIGEND: in std_logic;
          BL: in std_logic_vector(3 downto 0);
          BREAKPT: in std_logic;
          BUSDIS: out std_logic;
          BUSEN: in std_logic;
          COMMRX: out std_logic;
          COMMTX: out std_logic;
          CPA: in std_logic;
          CPB: in std_logic;
          D: inout std_logic_vector(31 downto 0);
          DBE: in std_logic;
          DBGACK: out std_logic;
          DBGEN: in std_logic;
          DBGRQ: in std_logic;
          DBGRQI: out std_logic;
          DIN: in std_logic_vector(31 downto 0);
          DOUT: out std_logic_vector(31 downto 0);
          DRIVEBS: out std_logic;
          ECLK: out std_logic;
          ECAPCLK: out std_logic;
          ECAPCLKBS: out std_logic;
          EXTERN0: in std_logic;
          EXTERN1: in std_logic;
          HIGHZ: out std_logic;
          ICAPCLKBS: out std_logic;
          IR: out std_logic_vector(3 downto 0);
          ISYNC: in std_logic;
          LOCK: out std_logic;
          MAS: out std_logic_vector(1 downto 0);
          MCLK: in std_logic;
          nCPI: out std_logic;
          nENIN: in std_logic;
          nENOUT: out std_logic;
          nENOUTI: out std_logic;
          nEXEC: out std_logic;
          nFIQ: in std_logic;
          nHIGHZ: out std_logic;
          nIRQ: in std_logic;
          nM: out std_logic_vector(4 downto 0);
          nMREQ: out std_logic;
          nOPC: out std_logic;
          nRESET: in std_logic;
          nRW: out std_logic;
          nTDOEN: out std_logic;
          nTRANS: out std_logic;
          nTRST: in std_logic;
          nWAIT: in std_logic;
          PCLKBS: out std_logic;
          RANGEOUT0: out std_logic;
          RANGEOUT1: out std_logic;
          RSTCLKBS: out std_logic;
          SCREG: out std_logic_vector(3 downto 0);
          SDINBS: out std_logic;
          SDOUTBS: in std_logic;
          SEQ: out std_logic;
          SHCLKBS: out std_logic;
          SHCLK2BS: out std_logic;
          TAPSM: out std_logic_vector(3 downto 0);
          TBE: in std_logic;
          TBIT: out std_logic;
          TCK: in std_logic;
          TCK1: out std_logic;
          TCK2: out std_logic;
          TDI: in std_logic;
          TDO: out std_logic;
          TMS: in std_logic);

end component;
end ARM7TDMI_lib;




