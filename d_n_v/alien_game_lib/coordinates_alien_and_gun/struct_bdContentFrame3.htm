<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 23:39:52 on  1.12.2022 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.coordinates_alien_and_gun.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - mqange.mqange (pikkuhaikara.lin.tuni.fi)</span>
<span class=C>--          at - 15:43:31 11&#47;11&#47;22</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> coordinates_alien_and_gun <span class=K>IS</span>
   <span class=K>PORT</span>(
      alien_x_coordinates : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      gun_x_coordinates   : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      hit                 : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> coordinates_alien_and_gun ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.coordinates_alien_and_gun.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - mqange.UNKNOWN (HTC219-722-SPC)</span>
<span class=C>--          at - 20:12:20 25.11.2022</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;


<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> coordinates_alien_and_gun <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> dout   : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout0  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout1  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout10 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout11 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout12 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout13 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout14 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout15 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout16 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout17 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout18 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout19 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout2  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout20 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout21 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout22 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout3  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout4  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout5  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout6  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout7  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout8  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout9  : <span class=T>std_logic</span>;


   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_0' of 'split'</span>
   <span class=K>SIGNAL</span> mw_U_0temp_din : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);

   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_1' of 'split'</span>
   <span class=K>SIGNAL</span> mw_U_1temp_din : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_2' of 'and'</span>
   hit <= <span class=K>NOT</span>(dout) <span class=K>AND</span> <span class=K>NOT</span>(dout1) <span class=K>AND</span> <span class=K>NOT</span>(dout2) <span class=K>AND</span> <span class=K>NOT</span>(dout3)
          <span class=K>AND</span> <span class=K>NOT</span>(dout4) <span class=K>AND</span> <span class=K>NOT</span>(dout5) <span class=K>AND</span> <span class=K>NOT</span>(dout6) <span class=K>AND</span> <span class=K>NOT</span>(dout7);

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_0' of 'split'</span>
   mw_U_0temp_din <= alien_x_coordinates;
   u_0combo_proc: <span class=K>PROCESS</span> (mw_U_0temp_din)
   <span class=K>VARIABLE</span> temp_din: <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>BEGIN</span>
      temp_din := mw_U_0temp_din(7 <span class=K>DOWNTO</span> 0);
      dout0 <= temp_din(0);
      dout8 <= temp_din(1);
      dout9 <= temp_din(2);
      dout10 <= temp_din(3);
      dout11 <= temp_din(4);
      dout12 <= temp_din(5);
      dout13 <= temp_din(6);
      dout14 <= temp_din(7);
   <span class=K>END</span> <span class=K>PROCESS</span> u_0combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_1' of 'split'</span>
   mw_U_1temp_din <= gun_x_coordinates;
   u_1combo_proc: <span class=K>PROCESS</span> (mw_U_1temp_din)
   <span class=K>VARIABLE</span> temp_din: <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>BEGIN</span>
      temp_din := mw_U_1temp_din(7 <span class=K>DOWNTO</span> 0);
      dout22 <= temp_din(0);
      dout21 <= temp_din(1);
      dout20 <= temp_din(2);
      dout19 <= temp_din(3);
      dout18 <= temp_din(4);
      dout17 <= temp_din(5);
      dout16 <= temp_din(6);
      dout15 <= temp_din(7);
   <span class=K>END</span> <span class=K>PROCESS</span> u_1combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_3' of 'xnor'</span>
   dout <= dout0 <span class=K>XOR</span> dout22;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_4' of 'xnor'</span>
   dout1 <= dout8 <span class=K>XOR</span> dout21;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_5' of 'xnor'</span>
   dout2 <= dout9 <span class=K>XOR</span> dout20;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_6' of 'xnor'</span>
   dout3 <= dout13 <span class=K>XOR</span> dout19;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_7' of 'xnor'</span>
   dout4 <= dout10 <span class=K>XOR</span> dout18;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_8' of 'xnor'</span>
   dout5 <= dout11 <span class=K>XOR</span> dout17;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_9' of 'xnor'</span>
   dout6 <= dout12 <span class=K>XOR</span> dout16;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_10' of 'xnor'</span>
   dout7 <= dout14 <span class=K>XOR</span> dout15;

   <span class=C>-- Instance port mappings.</span>

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
