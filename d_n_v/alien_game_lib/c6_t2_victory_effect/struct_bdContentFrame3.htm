<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 23:39:51 on  1.12.2022 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c6_t2_victory_effect.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - mqange.UNKNOWN (HTC219-722-SPC)</span>
<span class=C>--          at - 17:51:22 22.11.2022</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c6_t2_victory_effect <span class=K>IS</span>
   <span class=K>PORT</span>(
      clk     : <span class=A>IN</span>     <span class=T>std_logic</span>;
      rst_n   : <span class=A>IN</span>     <span class=T>std_logic</span>;
      color   : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      x_coord : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      y_coord : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c6_t2_victory_effect ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c6_t2_victory_effect.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - mqange.UNKNOWN (HTC219-710-SPC)</span>
<span class=C>--          at - 23:34:50  1.12.2022</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>LIBRARY</span> alien_game_lib;

<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c6_t2_victory_effect <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> dout     : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> x        : <span class=T>std_logic_vector</span>(3 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> x_coord1 : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> y        : <span class=T>std_logic_vector</span>(3 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> y_coord1 : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);


   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_3' of 'adff'</span>
   <span class=K>SIGNAL</span> mw_U_3reg_cval : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);

   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_4' of 'adff'</span>
   <span class=K>SIGNAL</span> mw_U_4reg_cval : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);

   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_5' of 'adff'</span>
   <span class=K>SIGNAL</span> mw_U_5reg_cval : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);

   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_6' of 'adff'</span>
   <span class=K>SIGNAL</span> mw_U_6reg_cval : <span class=T>std_logic_vector</span>(3 <span class=K>DOWNTO</span> 0);

   <span class=C>-- Component Declarations</span>
   <span class=K>COMPONENT</span> c6_t2_x_coord_vic
   <span class=K>PORT</span> (
      mux_signal : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (3 <span class=K>DOWNTO</span> 0);
      x_coord    : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> c6_t2_y_coord_vic
   <span class=K>PORT</span> (
      mux_signal : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (3 <span class=K>DOWNTO</span> 0);
      y_coord    : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> incrementer_4_bit
   <span class=K>PORT</span> (
      x : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (3 <span class=K>DOWNTO</span> 0);
      y : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (3 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;

   <span class=C>-- Optional embedded configurations</span>
   <span class=C>-- pragma synthesis_off</span>
   <span class=K>FOR</span> <span class=K>ALL</span> : c6_t2_x_coord_vic <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c6_t2_x_coord_vic;
   <span class=K>FOR</span> <span class=K>ALL</span> : c6_t2_y_coord_vic <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c6_t2_y_coord_vic;
   <span class=K>FOR</span> <span class=K>ALL</span> : incrementer_4_bit <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.incrementer_4_bit;
   <span class=C>-- pragma synthesis_on</span>


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_3' of 'adff'</span>
   color <= mw_U_3reg_cval;
   u_3seq_proc: <span class=K>PROCESS</span> (clk, rst_n)
   <span class=K>BEGIN</span>
      <span class=K>IF</span> (rst_n = '0') <span class=K>THEN</span>
         mw_U_3reg_cval <= <span class=S>"000000000000000000000001"</span>;
      <span class=K>ELSIF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk='1') <span class=K>THEN</span>
         mw_U_3reg_cval <= dout;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_3seq_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_4' of 'adff'</span>
   x_coord <= mw_U_4reg_cval;
   u_4seq_proc: <span class=K>PROCESS</span> (clk, rst_n)
   <span class=K>BEGIN</span>
      <span class=K>IF</span> (rst_n = '0') <span class=K>THEN</span>
         mw_U_4reg_cval <= <span class=S>"00000001"</span>;
      <span class=K>ELSIF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk='1') <span class=K>THEN</span>
         mw_U_4reg_cval <= x_coord1;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_4seq_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_5' of 'adff'</span>
   y_coord <= mw_U_5reg_cval;
   u_5seq_proc: <span class=K>PROCESS</span> (clk, rst_n)
   <span class=K>BEGIN</span>
      <span class=K>IF</span> (rst_n = '0') <span class=K>THEN</span>
         mw_U_5reg_cval <= <span class=S>"00000001"</span>;
      <span class=K>ELSIF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk='1') <span class=K>THEN</span>
         mw_U_5reg_cval <= y_coord1;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_5seq_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_6' of 'adff'</span>
   x <= mw_U_6reg_cval;
   u_6seq_proc: <span class=K>PROCESS</span> (clk, rst_n)
   <span class=K>BEGIN</span>
      <span class=K>IF</span> (rst_n = '0') <span class=K>THEN</span>
         mw_U_6reg_cval <= <span class=S>"0001"</span>;
      <span class=K>ELSIF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk='1') <span class=K>THEN</span>
         mw_U_6reg_cval <= y;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_6seq_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_7' of 'constval'</span>
   dout <= x<span class=S>"FFFFFF"</span>;

   <span class=C>-- Instance port mappings.</span>
   U_1 : c6_t2_x_coord_vic
      <span class=K>PORT</span> <span class=K>MAP</span> (
         mux_signal => y,
         x_coord    => x_coord1
      );
   U_2 : c6_t2_y_coord_vic
      <span class=K>PORT</span> <span class=K>MAP</span> (
         mux_signal => y,
         y_coord    => y_coord1
      );
   U_0 : incrementer_4_bit
      <span class=K>PORT</span> <span class=K>MAP</span> (
         x => x,
         y => y
      );

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
