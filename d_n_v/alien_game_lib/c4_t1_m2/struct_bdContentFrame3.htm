<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 23:19:20 on 11/05/22 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c4_t1_m2.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - mqange.mqange (linux-desktop10.tuni.fi)</span>
<span class=C>--          at - 22:02:36 11&#47;05&#47;22</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c4_t1_m2 <span class=K>IS</span>
   <span class=K>PORT</span>(
      btn          : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (3 <span class=K>DOWNTO</span> 0);
      clk          : <span class=A>IN</span>     <span class=T>std_logic</span>;
      enable       : <span class=A>IN</span>     <span class=T>std_logic</span>;
      rst_n        : <span class=A>IN</span>     <span class=T>std_logic</span>;
      x_coordinate : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c4_t1_m2 ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c4_t1_m2.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - mqange.mqange (linux-desktop10.tuni.fi)</span>
<span class=C>--          at - 22:02:36 11&#47;05&#47;22</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>LIBRARY</span> alien_game_lib;

<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c4_t1_m2 <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> din0  : <span class=T>std_logic_vector</span>(2 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> din1  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout  : <span class=T>std_logic_vector</span>(2 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout1 : <span class=T>std_logic_vector</span>(2 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> sel   : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> sel1  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> y     : <span class=T>std_logic_vector</span>(2 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> y1    : <span class=T>std_logic_vector</span>(2 <span class=K>DOWNTO</span> 0);

   <span class=C>-- Implicit buffer signal declarations</span>
   <span class=K>SIGNAL</span> x_coordinate_internal : <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);


   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_7' of 'adff'</span>
   <span class=K>SIGNAL</span> mw_U_7reg_cval : <span class=T>std_logic_vector</span>(2 <span class=K>DOWNTO</span> 0);

   <span class=C>-- Component Declarations</span>
   <span class=K>COMPONENT</span> c1_t3_incrementer
   <span class=K>PORT</span> (
      x : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (2 <span class=K>DOWNTO</span> 0);
      y : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (2 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> c1_t4_decrementer
   <span class=K>PORT</span> (
      x : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (2 <span class=K>DOWNTO</span> 0);
      y : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (2 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> c2_t3_bin2onehot
   <span class=K>PORT</span> (
      binary_in   : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (2 <span class=K>DOWNTO</span> 0);
      one_hot_out : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;

   <span class=C>-- Optional embedded configurations</span>
   <span class=C>-- pragma synthesis_off</span>
   <span class=K>FOR</span> <span class=K>ALL</span> : c1_t3_incrementer <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c1_t3_incrementer;
   <span class=K>FOR</span> <span class=K>ALL</span> : c1_t4_decrementer <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c1_t4_decrementer;
   <span class=K>FOR</span> <span class=K>ALL</span> : c2_t3_bin2onehot <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c2_t3_bin2onehot;
   <span class=C>-- pragma synthesis_on</span>


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_7' of 'adff'</span>
   din0 <= mw_U_7reg_cval;
   u_7seq_proc: <span class=K>PROCESS</span> (clk, rst_n)
   <span class=K>BEGIN</span>
      <span class=K>IF</span> (rst_n = '0') <span class=K>THEN</span>
         mw_U_7reg_cval <= <span class=S>"000"</span>;
      <span class=K>ELSIF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk='1') <span class=K>THEN</span>
         mw_U_7reg_cval <= dout;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_7seq_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_11' of 'and'</span>
   sel <= din1 <span class=K>AND</span> enable;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_3' of 'mux'</span>
   u_3combo_proc: <span class=K>PROCESS</span>(y1, y, sel1)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> sel1 <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => dout1 <= y1;
      <span class=K>WHEN</span> '1' => dout1 <= y;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => dout1 <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_3combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_6' of 'mux'</span>
   u_6combo_proc: <span class=K>PROCESS</span>(din0, dout1, sel)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> sel <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => dout <= din0;
      <span class=K>WHEN</span> '1' => dout <= dout1;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => dout <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_6combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_10' of 'or'</span>
   sel1 <= x_coordinate_internal(1) <span class=K>OR</span> x_coordinate_internal(6);

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_12' of 'or'</span>
   din1 <= btn(1) <span class=K>OR</span> btn(3);

   <span class=C>-- Instance port mappings.</span>
   U_1 : c1_t3_incrementer
      <span class=K>PORT</span> <span class=K>MAP</span> (
         x => din0,
         y => y1
      );
   U_2 : c1_t4_decrementer
      <span class=K>PORT</span> <span class=K>MAP</span> (
         x => din0,
         y => y
      );
   U_9 : c2_t3_bin2onehot
      <span class=K>PORT</span> <span class=K>MAP</span> (
         binary_in   => din0,
         one_hot_out => x_coordinate_internal
      );

   <span class=C>-- Implicit buffered output assignments</span>
   x_coordinate <= x_coordinate_internal;

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
