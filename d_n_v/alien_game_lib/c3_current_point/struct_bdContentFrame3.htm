<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 11:59:00 on 14.10.2022 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c3_current_point.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - mqange.UNKNOWN (HTC219-707-SPC)</span>
<span class=C>--          at - 18:54:18 13.10.2022</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c3_current_point <span class=K>IS</span>
   <span class=K>PORT</span>(
      clk           : <span class=A>IN</span>     <span class=T>std_logic</span>;
      rst           : <span class=A>IN</span>     <span class=T>std_logic</span>;
      x_coord       : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      current_point : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c3_current_point ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c3_current_point.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - mqange.UNKNOWN (HTC219-707-SPC)</span>
<span class=C>--          at - 18:54:18 13.10.2022</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;


<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c3_current_point <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> dout  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout1 : <span class=T>std_logic</span>;

   <span class=C>-- Implicit buffer signal declarations</span>
   <span class=K>SIGNAL</span> current_point_internal : <span class=T>std_logic</span>;


   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_2' of 'adff'</span>
   <span class=K>SIGNAL</span> mw_U_2reg_cval : <span class=T>std_logic</span>;


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_2' of 'adff'</span>
   current_point_internal <= mw_U_2reg_cval;
   u_2seq_proc: <span class=K>PROCESS</span> (clk, rst)
   <span class=K>BEGIN</span>
      <span class=K>IF</span> (rst = '0') <span class=K>THEN</span>
         mw_U_2reg_cval <= '1';
      <span class=K>ELSIF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk='1') <span class=K>THEN</span>
         mw_U_2reg_cval <= dout1;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_2seq_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_1' of 'mux'</span>
   u_1combo_proc: <span class=K>PROCESS</span>(current_point_internal, x_coord, dout)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> dout <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => dout1 <= current_point_internal;
      <span class=K>WHEN</span> '1' => dout1 <= x_coord(7);
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => dout1 <= 'X';
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_1combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_0' of 'or'</span>
   dout <= x_coord(7) <span class=K>OR</span> x_coord(0);

   <span class=C>-- Instance port mappings.</span>

   <span class=C>-- Implicit buffered output assignments</span>
   current_point <= current_point_internal;

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
