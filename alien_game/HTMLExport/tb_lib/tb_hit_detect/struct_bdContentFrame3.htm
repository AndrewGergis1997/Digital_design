<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 16:21:20 on 11/11/22 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity tb_lib.tb_hit_detect.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - kayra.UNKNOWN (pikkuhaikara.lin.tuni.fi)</span>
<span class=C>--          at - 16:17:39 06&#47;04&#47;18</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> tb_hit_detect <span class=K>IS</span>
<span class=C>-- Declarations</span>

<span class=K>END</span> tb_hit_detect ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture tb_lib.tb_hit_detect.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - mqange.mqange (pikkuhaikara.lin.tuni.fi)</span>
<span class=C>--          at - 16:21:06 11&#47;11&#47;22</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>LIBRARY</span> alien_game_lib;
<span class=K>LIBRARY</span> tb_lib;

<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> tb_hit_detect <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> alien_x  : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> alien_y  : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> btn      : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> bullet_x : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> bullet_y : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> clk      : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> gun_x    : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> hit      : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> mode     : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> rst_n    : <span class=T>std_logic</span>;


   <span class=C>-- Component Declarations</span>
   <span class=K>COMPONENT</span> c6_t1_hit_detector
   <span class=K>PORT</span> (
      alien_x_coordinate : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      btn                : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      clk                : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      gun_x_coordinate1  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      rst_n              : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      hit                : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> hit_testbench
   <span class=K>PORT</span> (
      hit      : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      mode     : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      alien_x  : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      alien_y  : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      btn      : <span class=A>OUT</span>    <span class=T>std_logic</span> ;
      bullet_x : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      bullet_y : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      clk      : <span class=A>OUT</span>    <span class=T>std_logic</span> ;
      gun_x    : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      rst_n    : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;

   <span class=C>-- Optional embedded configurations</span>
   <span class=C>-- pragma synthesis_off</span>
   <span class=K>FOR</span> <span class=K>ALL</span> : c6_t1_hit_detector <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c6_t1_hit_detector;
   <span class=K>FOR</span> <span class=K>ALL</span> : hit_testbench <span class=K>USE</span> <span class=K>ENTITY</span> tb_lib.hit_testbench;
   <span class=C>-- pragma synthesis_on</span>


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'mode' of 'constval'</span>
   mode <= '0';

   <span class=C>-- Instance port mappings.</span>
   U_0 : c6_t1_hit_detector
      <span class=K>PORT</span> <span class=K>MAP</span> (
         alien_x_coordinate => alien_x,
         btn                => btn,
         clk                => clk,
         gun_x_coordinate1  => gun_x,
         rst_n              => rst_n,
         hit                => hit
      );
   U_2 : hit_testbench
      <span class=K>PORT</span> <span class=K>MAP</span> (
         hit      => hit,
         mode     => mode,
         alien_x  => alien_x,
         alien_y  => alien_y,
         btn      => btn,
         bullet_x => bullet_x,
         bullet_y => bullet_y,
         clk      => clk,
         gun_x    => gun_x,
         rst_n    => rst_n
      );

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
