-- VHDL Entity alien_game_lib.incrementer_4_bit.symbol
--
-- Created:
--          by - mqange.UNKNOWN (HTC219-722-SPC)
--          at - 17:49:27 22.11.2022
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY incrementer_4_bit IS
   PORT( 
      x : IN     std_logic_vector (3 DOWNTO 0);
      y : OUT    std_logic_vector (3 DOWNTO 0)
   );

-- Declarations

END incrementer_4_bit ;

--
-- VHDL Architecture alien_game_lib.incrementer_4_bit.struct
--
-- Created:
--          by - mqange.UNKNOWN (HTC219-722-SPC)
--          at - 17:49:27 22.11.2022
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY alien_game_lib;

ARCHITECTURE struct OF incrementer_4_bit IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL carry  : std_logic;
   SIGNAL carry1 : std_logic;
   SIGNAL carry2 : std_logic;
   SIGNAL dout   : std_logic;


   -- Component Declarations
   COMPONENT c1_t1_half_adder
   PORT (
      sw0   : IN     std_logic ;
      sw1   : IN     std_logic ;
      carry : OUT    std_logic ;
      sum   : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : c1_t1_half_adder USE ENTITY alien_game_lib.c1_t1_half_adder;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_9' of 'constval'
   dout <= '1';

   -- Instance port mappings.
   U_8 : c1_t1_half_adder
      PORT MAP (
         sw0   => x(0),
         sw1   => dout,
         carry => carry,
         sum   => y(0)
      );
   U_10 : c1_t1_half_adder
      PORT MAP (
         sw0   => x(1),
         sw1   => carry,
         carry => carry1,
         sum   => y(1)
      );
   U_11 : c1_t1_half_adder
      PORT MAP (
         sw0   => x(2),
         sw1   => carry1,
         carry => carry2,
         sum   => y(2)
      );
   U_12 : c1_t1_half_adder
      PORT MAP (
         sw0   => x(3),
         sw1   => carry2,
         carry => OPEN,
         sum   => y(3)
      );

END struct;
