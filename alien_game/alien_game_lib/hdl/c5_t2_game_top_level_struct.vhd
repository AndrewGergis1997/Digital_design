-- VHDL Entity alien_game_lib.c5_t2_game_top_level.symbol
--
-- Created:
--          by - mqange.UNKNOWN (HTC219-712-SPC)
--          at - 22:50:05 13.11.2022
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY c5_t2_game_top_level IS
   PORT( 
      btn     : IN     std_logic_vector (3 DOWNTO 0);
      clk     : IN     std_logic;
      rst_n   : IN     std_logic;
      channel : OUT    std_logic_vector (7 DOWNTO 0);
      lat     : OUT    std_logic;
      s_clk   : OUT    std_logic;
      s_rst   : OUT    std_logic;
      s_sda   : OUT    std_logic;
      sb      : OUT    std_logic
   );

-- Declarations

END c5_t2_game_top_level ;

--
-- VHDL Architecture alien_game_lib.c5_t2_game_top_level.struct
--
-- Created:
--          by - mqange.UNKNOWN (HTC219-720-SPC)
--          at - 02:01:10  2.12.2022
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY alien_game_lib;
LIBRARY pre_made;

ARCHITECTURE struct OF c5_t2_game_top_level IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL Alien_Color   : std_logic_vector(23 DOWNTO 0);
   SIGNAL X_coordinate  : std_logic_vector(7 DOWNTO 0);
   SIGNAL Y_coordinate  : std_logic_vector(7 DOWNTO 0);
   SIGNAL color         : std_logic_vector(23 DOWNTO 0);
   SIGNAL defeated      : std_logic;
   SIGNAL din2          : std_logic_vector(7 DOWNTO 0);
   SIGNAL din3          : std_logic_vector(7 DOWNTO 0);
   SIGNAL din4          : std_logic_vector(23 DOWNTO 0);
   SIGNAL din5          : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout          : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout1         : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout2         : std_logic;
   SIGNAL dout3         : std_logic_vector(23 DOWNTO 0);
   SIGNAL enable        : std_logic;
   SIGNAL frame_done    : std_logic;
   SIGNAL gun_color     : std_logic_vector(23 DOWNTO 0);
   SIGNAL gun_px_idx    : std_logic_vector(1 DOWNTO 0);
   SIGNAL module_select : std_logic_vector(1 DOWNTO 0);
   SIGNAL w_rdy         : std_logic;
   SIGNAL write         : std_logic;
   SIGNAL x_coord       : std_logic_vector(7 DOWNTO 0);
   SIGNAL x_coord1      : std_logic_vector(7 DOWNTO 0);
   SIGNAL y_coord       : std_logic_vector(7 DOWNTO 0);


   -- Component Declarations
   COMPONENT c3_hit_defeated
   PORT (
      clk      : IN     std_logic ;
      hit      : IN     std_logic ;
      rst      : IN     std_logic ;
      defeated : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT c3_t1_basic_alien
   PORT (
      Enable             : IN     std_logic ;
      clk                : IN     std_logic ;
      hit                : IN     std_logic ;
      rst                : IN     std_logic ;
      alien_color        : OUT    std_logic_vector (23 DOWNTO 0);
      alien_x_coordinate : OUT    std_logic_vector (7 DOWNTO 0);
      alien_y_coordinate : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT c4_t1_gun_module
   PORT (
      btn         : IN     std_logic_vector (3 DOWNTO 0);
      clk         : IN     std_logic ;
      enable      : IN     std_logic ;
      gun_px_idx  : IN     std_logic_vector (1 DOWNTO 0);
      rst_n       : IN     std_logic ;
      gun_color   : OUT    std_logic_vector (23 DOWNTO 0);
      gun_x_coord : OUT    std_logic_vector (7 DOWNTO 0);
      gun_y_coord : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT c5_t1_write_sequencer
   PORT (
      alien_defeated : IN     std_logic ;
      clk            : IN     std_logic ;
      rst            : IN     std_logic ;
      write_ready    : IN     std_logic ;
      enable         : OUT    std_logic ;
      frame_done     : OUT    std_logic ;
      gun_px_idx     : OUT    std_logic_vector (1 DOWNTO 0);
      module_select  : OUT    std_logic_vector (1 DOWNTO 0);
      write          : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT c6_t1_hit_detector
   PORT (
      alien_x_coordinate : IN     std_logic_vector (7 DOWNTO 0);
      btn                : IN     std_logic ;
      clk                : IN     std_logic ;
      gun_x_coordinate1  : IN     std_logic_vector (7 DOWNTO 0);
      rst_n              : IN     std_logic ;
      hit                : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT c6_t2_victory_effect
   PORT (
      clk     : IN     std_logic ;
      rst_n   : IN     std_logic ;
      color   : OUT    std_logic_vector (23 DOWNTO 0);
      x_coord : OUT    std_logic_vector (7 DOWNTO 0);
      y_coord : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT display_controller
   PORT (
      clk        : IN     std_logic ;
      color_BGR  : IN     std_logic_vector (23 DOWNTO 0);
      frame_done : IN     std_logic ;
      rst_n      : IN     std_logic ;
      write      : IN     std_logic ;
      x_coord    : IN     std_logic_vector (7 DOWNTO 0);
      y_coord    : IN     std_logic_vector (7 DOWNTO 0);
      channel    : OUT    std_logic_vector (7 DOWNTO 0);
      lat        : OUT    std_logic ;
      s_clk      : OUT    std_logic ;
      s_rst      : OUT    std_logic ;
      s_sda      : OUT    std_logic ;
      sb         : OUT    std_logic ;
      w_rdy      : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : c3_hit_defeated USE ENTITY alien_game_lib.c3_hit_defeated;
   FOR ALL : c3_t1_basic_alien USE ENTITY alien_game_lib.c3_t1_basic_alien;
   FOR ALL : c4_t1_gun_module USE ENTITY alien_game_lib.c4_t1_gun_module;
   FOR ALL : c5_t1_write_sequencer USE ENTITY alien_game_lib.c5_t1_write_sequencer;
   FOR ALL : c6_t1_hit_detector USE ENTITY alien_game_lib.c6_t1_hit_detector;
   FOR ALL : c6_t2_victory_effect USE ENTITY alien_game_lib.c6_t2_victory_effect;
   FOR ALL : display_controller USE ENTITY pre_made.display_controller;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_10' of 'constval'
   din3 <= "00000000";

   -- ModuleWare code(v1.12) for instance 'U_11' of 'constval'
   din2 <= "00000000";

   -- ModuleWare code(v1.12) for instance 'U_12' of 'constval'
   din4 <= "000000000000000000000000";

   -- ModuleWare code(v1.12) for instance 'U_4' of 'mux'
   u_4combo_proc: PROCESS(X_coordinate, x_coord, x_coord1, din3, 
                          module_select)
   BEGIN
      CASE module_select IS
      WHEN "00" => dout <= X_coordinate;
      WHEN "01" => dout <= x_coord;
      WHEN "10" => dout <= x_coord1;
      WHEN "11" => dout <= din3;
      WHEN OTHERS => dout <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_4combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_5' of 'mux'
   u_5combo_proc: PROCESS(Y_coordinate, y_coord, din5, din2, 
                          module_select)
   BEGIN
      CASE module_select IS
      WHEN "00" => dout1 <= Y_coordinate;
      WHEN "01" => dout1 <= y_coord;
      WHEN "10" => dout1 <= din5;
      WHEN "11" => dout1 <= din2;
      WHEN OTHERS => dout1 <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_5combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_6' of 'mux'
   u_6combo_proc: PROCESS(Alien_Color, gun_color, color, din4, 
                          module_select)
   BEGIN
      CASE module_select IS
      WHEN "00" => dout3 <= Alien_Color;
      WHEN "01" => dout3 <= gun_color;
      WHEN "10" => dout3 <= color;
      WHEN "11" => dout3 <= din4;
      WHEN OTHERS => dout3 <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_6combo_proc;

   -- Instance port mappings.
   U_7 : c3_hit_defeated
      PORT MAP (
         clk      => clk,
         hit      => dout2,
         rst      => rst_n,
         defeated => defeated
      );
   U_1 : c3_t1_basic_alien
      PORT MAP (
         Enable             => enable,
         clk                => clk,
         hit                => dout2,
         rst                => rst_n,
         alien_color        => Alien_Color,
         alien_x_coordinate => X_coordinate,
         alien_y_coordinate => Y_coordinate
      );
   U_0 : c4_t1_gun_module
      PORT MAP (
         btn         => btn,
         clk         => clk,
         enable      => enable,
         gun_px_idx  => gun_px_idx,
         rst_n       => rst_n,
         gun_color   => gun_color,
         gun_x_coord => x_coord,
         gun_y_coord => y_coord
      );
   U_2 : c5_t1_write_sequencer
      PORT MAP (
         alien_defeated => defeated,
         clk            => clk,
         rst            => rst_n,
         write_ready    => w_rdy,
         enable         => enable,
         frame_done     => frame_done,
         gun_px_idx     => gun_px_idx,
         module_select  => module_select,
         write          => write
      );
   U_13 : c6_t1_hit_detector
      PORT MAP (
         alien_x_coordinate => X_coordinate,
         btn                => btn(0),
         clk                => clk,
         gun_x_coordinate1  => x_coord,
         rst_n              => rst_n,
         hit                => dout2
      );
   U_14 : c6_t2_victory_effect
      PORT MAP (
         clk     => clk,
         rst_n   => rst_n,
         color   => color,
         x_coord => x_coord1,
         y_coord => din5
      );
   U_3 : display_controller
      PORT MAP (
         clk        => clk,
         color_BGR  => dout3,
         frame_done => frame_done,
         rst_n      => rst_n,
         write      => write,
         x_coord    => dout,
         y_coord    => dout1,
         channel    => channel,
         lat        => lat,
         s_clk      => s_clk,
         s_rst      => s_rst,
         s_sda      => s_sda,
         sb         => sb,
         w_rdy      => w_rdy
      );

END struct;
